<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EnviarMail.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>